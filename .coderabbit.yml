# CodeRabbit Configuration for ASCA (Korean Calligraphy Association)
# AI-powered code review for advanced cultural platform

# Review settings
reviews:
  # Assertive profile for comprehensive analysis of complex system
  profile: assertive
  
  # Enable request changes workflow for critical cultural platform
  request_changes_workflow: true
  
  # Detailed high-level summaries for complex features
  high_level_summary: true
  
  # Poetry disabled for professional focus
  poem: false
  
  # Critical focus areas for cultural heritage platform
  focus:
    - security          # Sensitive cultural data protection
    - performance       # AI vision processing optimization
    - accessibility     # Cultural inclusivity (WCAG 2.1 AA)
    - internationalization # Multi-language support (KO/EN/JA/CN)
    - data-integrity    # Cultural artifacts preservation
    - ai-ethics         # Responsible AI vision analysis

# Chat settings
chat:
  # Enable automatic responses for development guidance
  auto_reply: true
  
# Primary language with international consideration
language: ko

# Advanced project-specific rules
rules:
  # Cultural heritage data security
  security:
    # Strictest security for cultural artifacts
    strict_mode: true
    # Comprehensive secret detection
    check_secrets: true
    # Cultural data privacy compliance
    privacy_compliance: true
    # Authentication flow validation (Clerk integration)
    auth_validation: true
    
  # AI Vision system performance requirements
  performance:
    # Critical for real-time calligraphy analysis
    ai_optimization: true
    # Image processing efficiency
    image_processing: true
    # Database query optimization (dual-database system)
    database_optimization: true
    # Bundle analysis for complex UI
    bundle_analysis: true
    # Memory management for AI processing
    memory_optimization: true
    
  # Code quality for complex architecture
  quality:
    # Strict TypeScript for type safety
    typescript_strict: true
    # Comprehensive error handling
    error_handling: true
    # Async patterns for AI processing
    async_patterns: true
    # Component architecture validation
    component_architecture: true
    
  # Cultural platform specific
  cultural:
    # Multi-language content validation
    i18n_compliance: true
    # Cultural sensitivity checks
    cultural_sensitivity: true
    # Traditional art terminology accuracy
    terminology_accuracy: true
    
  # Advanced Next.js patterns
  nextjs:
    # App Router best practices
    app_router: true
    # Server/Client component optimization
    component_patterns: true
    # SEO for cultural content
    seo_optimization: true
    # Image optimization for artworks
    image_optimization: true
    
  # Database integrity (Airtable + Supabase)
  database:
    # Dual-database sync validation
    sync_integrity: true
    # Migration safety
    migration_safety: true
    # Data consistency checks
    consistency_validation: true

# Comprehensive file inclusion for complex architecture
include:
  - "**/*.ts"
  - "**/*.tsx"
  - "**/*.js"
  - "**/*.jsx"
  - "app/**/*"
  - "components/**/*"
  - "lib/**/*"
  - "contexts/**/*"
  - "hooks/**/*"
  - "types/**/*"

# Exclude build artifacts and dependencies
exclude:
  - "node_modules/**"
  - ".next/**"
  - "out/**"
  - "coverage/**"
  - "*.config.js"
  - "*.config.ts"
  - "*.config.mjs"
  - "public/**"
  - "drizzle/**"
  - ".drizzle/**"

# Domain-specific prompts for cultural platform
prompts:
  ai_vision_analysis: |
    This system includes advanced AI computer vision for calligraphy analysis.
    Focus on:
    - Image preprocessing algorithms (noise reduction, binarization)
    - Stroke detection and analysis accuracy
    - Real-time performance for educational feedback
    - Memory management for image processing
    - Error handling for invalid image inputs
    - Privacy considerations for user artwork uploads
    
  cultural_data_integrity: |
    This platform preserves and manages Korean cultural heritage.
    Pay attention to:
    - Data accuracy and cultural authenticity
    - Multi-language consistency (Korean, English, Japanese, Chinese)
    - Traditional terminology correctness
    - Cultural sensitivity in UI/UX design
    - Historical accuracy in educational content
    - Respectful presentation of traditional arts
    
  dual_database_architecture: |
    Complex dual-database system with Airtable and Supabase.
    Review for:
    - Sync integrity between systems
    - Data consistency validation
    - Migration safety protocols
    - Conflict resolution strategies
    - Performance optimization for dual queries
    - Backup and recovery procedures
    
  membership_system: |
    Sophisticated 6-tier membership hierarchy system.
    Consider:
    - Role-based access control accuracy
    - Member progression logic
    - Permission validation
    - Activity tracking integrity
    - Certification management
    - International member support
    
  performance_optimization: |
    High-performance requirements for AI processing and cultural content.
    Focus on:
    - AI vision processing optimization
    - Large image handling efficiency
    - Database query performance (complex joins)
    - Real-time sync performance
    - Bundle optimization for rich UI
    - Core Web Vitals for cultural content display

# Enhanced integration settings
integrations:
  # GitHub integration for team collaboration
  github:
    pr_comments: true
    create_issues: true
    auto_assign_security: true
    auto_assign_performance: true
    
  # Development workflow integration
  development:
    # Pre-commit hook integration
    pre_commit_validation: true
    # CI/CD pipeline checks
    ci_cd_integration: true
    # Database migration validation
    migration_checks: true
    
# Custom severity levels for cultural platform
severity:
  # Critical issues that must be addressed immediately
  critical:
    - "cultural_data_corruption"
    - "ai_bias_detection"
    - "security_vulnerability"
    - "data_loss_risk"
    
  # High priority issues
  high:
    - "performance_degradation" 
    - "accessibility_violation"
    - "i18n_inconsistency"
    - "database_sync_failure"
    
  # Medium priority improvements
  medium:
    - "code_quality"
    - "documentation_gaps"
    - "ui_ux_improvements"
    - "test_coverage"

# AI-specific validation rules
ai_validation:
  # Computer vision ethics
  vision_ethics:
    - bias_detection: true
    - fairness_validation: true
    - transparency_requirements: true
    
  # Model performance
  model_performance:
    - accuracy_thresholds: true
    - latency_requirements: true
    - resource_optimization: true